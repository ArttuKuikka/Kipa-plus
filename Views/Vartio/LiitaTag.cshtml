@model Kipa_plus.Models.LiitaTagModel

@{
    ViewData["Title"] = "Liita Tägi";
}

<h1>Liitä uusi tag</h1>

<h4>Vartio</h4>
<hr />
<p class="text-danger">HUOM! jos vartiolle on jo liitetty tägi, tämän uudelleenkirjoittaa sen</p>
<div class="row">
    <div class="col-md-4">
        <form asp-action="LiitaTag">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="col-md-10" style="max-width:500px">
                <label class="control-label">Vartio</label>
                @Html.DropDownListFor(model => model.VartioId,new SelectList(ViewBag.Vartiot, "Id", "NumeroJaNimi"),  new { @class = "form-control"} )
                @Html.ValidationMessageFor(model => model.VartioId, "", new { @class = "text-danger" })
            </div>
           
            <div class="form-group">
                <label class="control-label">Tag Serial</label>
                <input asp-for="TagSerial" id="SerialInput" class="form-control" />
                <input type="button" class="btn btn-light" id="StartScan" value="Aloita skannaus" />
                <span asp-validation-for="TagSerial" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Lisää tag" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
   
</div>

<script>

    document.getElementById('StartScan').addEventListener("click", async () => {
  

  try {
    const ndef = new NDEFReader();
    await ndef.scan();
    console.log("> Scan started");

    ndef.addEventListener("readingerror", () => {
      alert("Virhe lukiessa Tagia, yritä uudelleen");
    });

    ndef.addEventListener("reading", ({ message, serialNumber }) => {
      document.getElementById('SerialInput').value = serialNumber.toString();
    });
  } catch (error) {
    alert("Virhe aloittessa NFC lukua, kai käytät chromea androidilla ja annoit sivustolle luvan käyttää NFC sensoria" );
  }
});




     
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
