@model Kisa_Kuikka.Models.ViewModels.JatkaTehtävääViewModel

@{
    ViewData["Title"] = "Jatka tehtävää";
}





<h5>Rasti:@Model.RastiNimi </h5>
<h4>Jatka tehtävää</h4>
<hr />
<div class="row">
    <div>
        <form action="/Tehtava/Jatka?RastiId=@Model.RastiId" method="post" id="Formi">
            @Html.AntiForgeryToken()
        <h2>@Model.VartioNimi</h2>
        <h3>@Model.TehtäväNimi</h3>

        <div class="form-group" hidden="hidden">
            
            <input asp-for="TehtäväVastausId" class="form-control" />
            
        </div>

         <div class="form-group" hidden="hidden">
            
            <input asp-for="RastiId" class="form-control" />
            
        </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input hidden="hidden" id="Kesken-CheckBox" class="form-check-input" asp-for="Kesken" />
                </label>
            </div>
       

        <div class="form-group" hidden="hidden">
            <label asp-for="TehtäväJson" class="control-label"></label>
            <input asp-for="TehtäväJson" id="json-input" class="form-control" />
            <span asp-validation-for="TehtäväJson" class="text-danger"></span>
        </div>

        <div class="json-viewer" id="json-viewer"></div>


        <br />
        
        <div class="form-group">
            <input type="button" id="submit-button" value="Lähetä" class="btn btn-primary noPrint" />
                <input type="button" id="submit-kesken-button" value="Jatka täyttöä myöhemmin" class="btn btn-primary noPrint" />
           

        </div>

        </form>
    </div>
</div>







<script src="~/js/site.js" asp-append-version="true"></script>
<script src="assets/js/form-render.min.js"></script>
<script src="assets/js/jquery-ui.min.js"></script>
<script src="assets/js/media.js"></script>
<script src="assets/js/currentTime.js"></script>
<script src="assets/js/picker.js"></script>
<link href="assets/picker.css" rel="stylesheet">
<script src="assets/js/arviointivali.js"></script>
<script src="assets/js/fileUpload.js"></script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        //luo formrender käyttämällä piilokentässä olevaa jsonia joka tehtiin formbuilderilla
        jQuery(function ($) {
            var fbeditor = document.getElementById('json-viewer');
            var getdata = document.getElementById('json-input').value;
            var fb = $(fbeditor).formRender({
                dataType: 'json',
                formData: getdata
            });


            //lisätään ja poistetaan kaikki elementit joissa on joko yli max tai ali min numero, estä submit jos listassa mitään
            let varoituslista = [];

            //estä pilkut varmasti kaikilla selaimilla
            document.querySelectorAll("input[type=number]").forEach(function (input) {
                input.addEventListener("keypress", function (evt) {

                    var char = String.fromCharCode(evt.which);
                    if (char == "," || input.value.indexOf(".") != -1) {
                        evt.preventDefault();
                    }
                });
            });

            Formi.addEventListener("focusout", () => {
                let elements = Formi.getElementsByTagName('input');
                for (index = 0; index < elements.length; ++index) {
                    var input = elements[index];






                    if (input.hasAttribute("max")) {
                        // Get the input value as a number
                        var value = Number(input.value);

                        // Define the minimum and maximum values

                        var max = input.getAttribute("max");

                        // Check if the value is within the range
                        if (value > max) {
                            // Do something if the value is out of range


                            // Create a span element with red warning text
                            var span = document.createElement("span");
                            span.classList.add("text-danger");
                            span.id = "maxvaroitus"
                            span.textContent = "Numero on suurempi kuin suurin sallittu arvo (" + max + ")";

                            // Append the span element to the parent element of the input
                            if (input.parentElement.querySelector('#maxvaroitus') == null) {
                                input.parentElement.append(span);
                                varoituslista.push(input);

                            }

                        } else {
                            // Do something else if the value is within range

                            var varoitukset = input.parentElement.querySelectorAll('#maxvaroitus')
                            if (varoitukset != null) {
                                for (let i = 0; i < varoitukset.length; i++) {
                                    input.parentElement.removeChild(varoitukset[i]);


                                    var index = varoituslista.indexOf(input);
                                    varoituslista.splice(index, 1);
                                }

                            }

                        }
                    }

                    if (input.hasAttribute("min")) {
                        // Get the input value as a number
                        var value = Number(input.value);

                        // Define the minimum and maximum values

                        var min = input.getAttribute("min");

                        // Check if the value is within the range
                        if (value < min) {
                            // Do something if the value is out of range


                            // Create a span element with red warning text
                            var span = document.createElement("span");
                            span.classList.add("text-danger");
                            span.id = "minvaroitus"
                            span.textContent = "Numero on pienempi kuin pienin sallittu arvo (" + min + ")";

                            // Append the span element to the parent element of the input
                            if (input.parentElement.querySelector('#minvaroitus') == null) {
                                input.parentElement.append(span);
                                varoituslista.push(input);

                            }


                        } else {
                            // Do something else if the value is within range

                            var varoitukset = input.parentElement.querySelectorAll('#minvaroitus')
                            if (varoitukset != null) {
                                for (let i = 0; i < varoitukset.length; i++) {
                                    input.parentElement.removeChild(varoitukset[i]);

                                    var index = varoituslista.indexOf(input);
                                    varoituslista.splice(index, 1);
                                }

                            }
                        }
                    }
                }
            });

            //tarkista eka clientillä että kaikissa required fieldeissä on userdataa jos ei oo älä anna submitata
            function Submittaa(Kesken) {
                var data = fb.userData;


                 //tarkista varoitukset
                if(varoituslista.length > 0){
                    alert('korjaa kaikki kentätät jotka ovat yli maksimirajan tai ali minimirajan')
                    return;
                }

                //tarkista että kaikkissa required fieldeissä on userdataa
                for (let i = 0; i < data.length; i++) {

                    var field = data[i]
                    console.log(field.userData);

                    if (field.required == true) {

                        try {
                            if (!field.hasOwnProperty('userData')) {
                                //luo teksti ja siihen liittyvät asiat
                                var elem = document.createElement('span');
                                var parent = document.getElementsByName(field.name)[0].parentElement;
                                elem.textContent = 'Tämä kenttä on pakollinen';
                                elem.style.color = 'red';
                                elem.id = 'elementti';

                                //lisää teksti vain jos sitä ei ole jo
                                if (parent.querySelector('#elementti') == null) {
                                    parent.appendChild(elem);
                                }

                                //lisää fade elementtiin
                                $(elem).fadeOut(6000, function () {
                                    elem.remove();

                                });
                                return;
                            }
                            else {
                                if (field.userData != null) {
                                    if (Array.isArray(field.userData)) {
                                        if (field.userData[0].length < 1) {
                                            //luo teksti ja siihen liittyvät asiat
                                            var elem = document.createElement('span');
                                            var parent = document.getElementsByName(field.name)[0].parentElement;
                                            elem.textContent = 'Tämä kenttä on pakollinen';
                                            elem.style.color = 'red';
                                            elem.id = 'elementti';

                                            //lisää teksti vain jos sitä ei ole jo
                                            if (parent.querySelector('#elementti') == null) {
                                                parent.appendChild(elem);
                                            }

                                            //lisää fade elementtiin
                                            $(elem).fadeOut(6000, function () {
                                                elem.remove();

                                            });
                                            return;
                                        }
                                    }
                                    else if (field.userData.length < 1) {
                                        //luo teksti ja siihen liittyvät asiat
                                        var elem = document.createElement('span');
                                        var parent = document.getElementsByName(field.name)[0].parentElement;
                                        elem.textContent = 'Tämä kenttä on pakollinen';
                                        elem.style.color = 'red';
                                        elem.id = 'elementti';

                                        //lisää teksti vain jos sitä ei ole jo
                                        if (parent.querySelector('#elementti') == null) {
                                            parent.appendChild(elem);
                                        }

                                        //lisää fade elementtiin
                                        $(elem).fadeOut(6000, function () {
                                            elem.remove();

                                        });
                                        return;
                                    }
                                }
                                else {
                                    var elem = document.createElement('span');
                                    var parent = document.getElementsByName(field.name)[0].parentElement;
                                    elem.textContent = 'Tämä kenttä on pakollinen';
                                    elem.style.color = 'red';
                                    elem.id = 'elementti';

                                    //lisää teksti vain jos sitä ei ole jo
                                    if (parent.querySelector('#elementti') == null) {
                                        parent.appendChild(elem);
                                    }

                                    //lisää fade elementtiin
                                    $(elem).fadeOut(6000, function () {
                                        elem.remove();

                                    });
                                    return;
                                }
                            }
                        }
                        catch (error) {
                            alert('täytä kaikki pakolliset punaisella tähdellä merkityt kohdat!')
                            return;
                        }
                    }
                }
                //laita userdata json muodossa piilotettuun fieldiin formissa että se voidaan lähettää
                var jsondata = JSON.stringify(data);
                document.getElementById('json-input').value = jsondata;

                if (Kesken) {
                    document.getElementById('Kesken-CheckBox').checked = true;
                };

                document.getElementById('Formi').submit();
            }




            document.getElementById('submit-button').addEventListener('click', function () {
                Submittaa(false);
            });
            document.getElementById('submit-kesken-button').addEventListener('click', function () {
                Submittaa(true);
            });
            
        })
    </script>
}
